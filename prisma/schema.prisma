generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model NotionDatabase {
  id        String   @id @default(cuid())
  databaseId String  @unique
  title     String
  addedAt   DateTime @default(now())
  lastSync  DateTime @default(now())
  authorId  String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@index([authorId])
}

model Diary {
  id         String   @id @default(cuid())
  title      String   @default("Untitled")
  content    String   @db.Text @default("")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  authorId   String
  isArchived Boolean  @default(false)
  author     User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  @@index([authorId])
}

model Mood {
  id        String   @id @default(cuid())
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  @@index([authorId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String  
  type              String  
  providerAccountId String  
  provider          String  
  refresh_token     String? 
  access_token      String? @db.VarChar(2048)
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.VarChar(2048)
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  diaries       Diary[]
  moods         Mood[]
  notionDatabases NotionDatabase[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
